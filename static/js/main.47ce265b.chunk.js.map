{"version":3,"sources":["Component/Cards/Cards.module.css","Component/Cards/Cards.jsx","API/index.js","Component/Chart/Chart.jsx","Component/CountryPicker/CountryPicker.jsx","Images/Covid.png","App.js","index.js","App.module.css","Component/Chart/Chart.module.css","Component/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","console","log","className","style","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","death","fetchData","a","dinamicUrl","axios","get","fetchDailyData","modifyData","map","result","total","reportDate","fetchDataCountries","countries","name","Chart","detailCountry","useState","dataDaily","setDaily","useEffect","fetchDaily","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChar","options","title","display","text","CountryPicker","handleCountry","dataCountries","setCountries","fetchCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","dataCase","country","handleCountryPicker","setState","this","src","Covid","alt","image","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47ce265b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3NrNW\",\"card\":\"Cards_card__3MNL4\",\"infected\":\"Cards_infected__10gCW\",\"recovered\":\"Cards_recovered__xJ5KV\",\"death\":\"Cards_death__bvfz8\"};","import React from 'react';\r\nimport {Card,Grid,CardContent,Typography} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\n\r\n//This Method use when a exist multiple classname \r\nimport cx from 'classnames'\r\n\r\nimport style from './Cards.module.css';\r\n\r\nconst Cards = ({data : {confirmed,deaths,recovered,lastUpdate}}) =>{\r\n\r\n    if(!confirmed){\r\n        return(\r\n            <p>Loding......</p>\r\n        )\r\n    }\r\n\r\n    console.log(confirmed)\r\n   \r\n    return(\r\n        <div className ={style.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(style.card,style.infected)}>\r\n                        <CardContent>\r\n                            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                <CountUp start ={0} end = {confirmed.value} duration = {2,5} separator = \",\"/>\r\n                            </Typography>\r\n                            <Typography color=\"textSecondary\" gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\r\n                            <Typography variant=\"body2\">Number Of Active cause COVID-19</Typography>\r\n                        </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(style.card,style.recovered)}>\r\n                        <CardContent>\r\n                            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                <CountUp start ={0} end = {recovered.value} duration = {2,5} separator = \",\"/>\r\n                            </Typography>\r\n                            <Typography color=\"textSecondary\" gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\r\n                            <Typography variant=\"body2\">Number Of Recovered</Typography>\r\n                        </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(style.card,style.death)}>\r\n                        <CardContent>\r\n                            <Typography color=\"textSecondary\" gutterBottom>Death</Typography>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                <CountUp start ={0} end = {deaths.value} duration = {2,5} separator = \",\"/>\r\n                            </Typography>\r\n                            <Typography color=\"textSecondary\" gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\r\n                            <Typography variant=\"body2\">Number Of Death Cause COVID-19</Typography>\r\n                        </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","\r\nimport axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\n//get Data function for data patient\r\nexport const fetchData = async (value) =>{\r\n    let dinamicUrl = url;\r\n\r\n    if(value){\r\n        dinamicUrl = `${dinamicUrl}/countries/${value}`\r\n    }\r\n\r\n    try{\r\n        //destruction data object from API\r\n        const { data : {confirmed,deaths,recovered,lastUpdate}} = await axios.get(dinamicUrl);\r\n\r\n        //Desctuction ALL data API\r\n        return {confirmed, deaths, recovered, lastUpdate};\r\n\r\n    }catch(error){\r\n\r\n    }  \r\n}\r\n\r\nconst urlDaily = 'https://covid19.mathdro.id/api/daily';\r\n\r\nexport const fetchDailyData = async () =>{\r\n    try {\r\n        //Destruction data object from API\r\n        const {data} = await axios.get(urlDaily);\r\n\r\n        //Destruction ALL data API, Use looping because data is Array\r\n        const modifyData =  data.map((result)=>({\r\n            confirmed : result.confirmed.total,\r\n            deaths : result.deaths.total,\r\n            reportDate : result.reportDate\r\n        }))\r\n               \r\n       return modifyData;\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst urlCountries = 'https://covid19.mathdro.id/api/countries';\r\n\r\nexport const fetchDataCountries = async () =>{\r\n    try {\r\n        //destruction all Data from API\r\n        const {data : {countries} } = await axios.get(urlCountries);\r\n\r\n       return countries.map((result)=> result.name);                   \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../API/index';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\n\r\nimport style from './Chart.module.css';\r\n\r\nconst Chart = ({ data : {confirmed,recovered,deaths,lastUpdate} ,detailCountry}) =>{\r\n    const [dataDaily,setDaily] = useState([]);\r\n\r\n    //useEffect has a 2 paramater \r\n    useEffect(()=>{\r\n        const fetchDaily = async () =>{           \r\n            setDaily(await fetchDailyData());                       \r\n        }                     \r\n        fetchDaily();       \r\n    },[])  \r\n    \r\n    if(confirmed){\r\n        console.log(confirmed.value);\r\n    }else{\r\n        console.log('data belum muncul')\r\n    }\r\n\r\n    const lineChart = (       \r\n        dataDaily.length ? (\r\n            <Line\r\n                data={{\r\n                    labels: dataDaily.map(({reportDate})=> reportDate),\r\n                    datasets : [{\r\n                         data : dataDaily.map(({confirmed})=> confirmed),\r\n                         label : 'Infected',\r\n                         borderColor : '#3333ff',\r\n                         fill : true,                       \r\n                    },{\r\n                         data : dataDaily.map(({deaths})=> deaths),\r\n                         label : 'death',\r\n                         borderColor : 'red',\r\n                         backgroundColor : 'rgba(255,0,0, 0.5)',\r\n                         fill : true,     \r\n                    }],\r\n                }}\r\n            />\r\n        ) : <p>Loading...</p>\r\n    )\r\n    \r\n    const barChar = (\r\n        confirmed ? (\r\n            <Bar\r\n                data = {{\r\n                    labels : ['Infected','Recoverd', 'Deaths'],\r\n                    datasets : [{\r\n                        label : `Last Update ${new Date(lastUpdate).toDateString()}`,\r\n                        backgroundColor : [\r\n                            'rgba(0,0,255,0.5) ',\r\n                            'rgba(0,255,0,0.5) ',\r\n                            'rgba(255,0,0,0.5) ',\r\n                        ],\r\n                        data : [confirmed.value ,recovered.value,deaths.value],\r\n                    }]\r\n                }}\r\n\r\n                options = {{\r\n                   // legend : { display : false},\r\n                    title :  {display : true , text : `Current State in ${detailCountry}`} \r\n\r\n                }}\r\n            />\r\n        ) : null\r\n\r\n    )\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            {detailCountry ? barChar : lineChart }           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React,{useState,useEffect} from 'react';\r\nimport {FormControl,NativeSelect} from '@material-ui/core';\r\nimport {fetchDataCountries} from '../../API/index';\r\n\r\nimport style from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ({handleCountry}) =>{\r\n    const [dataCountries,setCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchCountries = async () =>{\r\n            setCountries( await fetchDataCountries())\r\n        }\r\n        fetchCountries()\r\n    },[setCountries])\r\n   \r\n          \r\n    return(                                                 \r\n        <FormControl className={style.formControl}>\r\n            <NativeSelect defaultValue=\" \" onChange={(e)=>{handleCountry(e.target.value)}}>\r\n                <option value = \"\">Global</option>\r\n                    {\r\n                        dataCountries.map((name,i)=>\r\n                            <option key={i} value ={name} > {name} </option>\r\n                        )\r\n                    }\r\n            </NativeSelect>\r\n        </FormControl>                                                        \r\n    )\r\n}\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/Covid.9e5d4fc7.png\";","import React,{Component} from 'react';\r\nimport {Cards,Chart,CountryPicker} from './Component/index';\r\nimport {fetchData} from './API/index'\r\n\r\nimport style from './App.module.css';\r\nimport Covid from './Images/Covid.png';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        dataCase : {},\r\n        country : ''    \r\n    }\r\n\r\n    async componentDidMount(){\r\n        const data = await fetchData();              \r\n        this.setState({\r\n            dataCase : data,         \r\n        })\r\n        console.log(data);\r\n    }\r\n\r\n    handleCountryPicker = async (value) =>{\r\n        const data = await fetchData(value);              \r\n        this.setState({\r\n            dataCase : data,\r\n            country : value         \r\n        }) \r\n\r\n        console.log(this.state.dataCase)      \r\n    }\r\n\r\n    render(){\r\n        const {dataCase,country} = this.state;\r\n        return(\r\n            <div className={style.container}>\r\n                <img src={Covid} alt=\"Covid-19\" className={style.image}></img>            \r\n                <Cards data = {dataCase}/>\r\n                <CountryPicker handleCountry={this.handleCountryPicker}/>\r\n                <Chart data = {dataCase} detailCountry={country} />\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__1Sbbx\",\"container\":\"App_container__2J_j0\",\"image\":\"App_image__1Z6jc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__aD3Uw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2BQGx\"};"],"sourceRoot":""}